from typing import Optional

class AESCCM:
    def __init__(self, key: bytes, tag_length: Optional[int]): ...
    @classmethod
    def generate_key(cls, bit_length: int) -> bytes: ...
    def decrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...
    def encrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...

class AESGCM:
    def __init__(self, key: bytes): ...
    @classmethod
    def generate_key(cls) -> bytes: ...
    def decrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...
    def encrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...

class ChaCha20Poly1305:
    def __init__(self, key: bytes): ...
    @classmethod
    def generate_key(cls) -> bytes: ...
    def decrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...
    def encrypt(
        self, nonce: bytes, data: bytes, associated_data: Optional[bytes]
    ) -> bytes: ...
